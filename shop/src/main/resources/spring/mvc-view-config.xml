<?xml version="1.0" encoding="UTF-8"?>
<!-- - DispatcherServlet application context for PetClinic's web tier. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver 
		and BeanNameViewResolver, - and uses the requested media type (determined 
		by the path extension) to pick a matching view. - When the media type is 
		'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
		- otherwise to the BeanNameViewResolver. -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager" />

		<property name="viewResolvers">
			<list>
				<!-- Default viewClass: JSTL view (JSP with html output) -->
				<!-- Device aware view resolving -->
				<bean id="liteDeviceDelegatingViewResolver"
					class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
					<constructor-arg>
						<bean
							class="org.springframework.web.servlet.view.InternalResourceViewResolver">
							<!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
							<property name="prefix" value="/WEB-INF/jsp/" />
							<property name="suffix" value=".jsp" />
						</bean>
					</constructor-arg>
					<!-- 스프링 모바일 뷰-->
					<property name="mobilePrefix" value="m/" />
					<property name="tabletPrefix" value="t/" />
					<property name="enableFallback" value="true" />
				</bean>

				<!-- Used here for 'xml' and 'atom' views -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</bean>
			</list>
		</property>
	</bean>
	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="cnManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
				<entry key="atom" value="application/atom+xml" />
				<entry key="json" value="application/json"></entry>
			</map>
		</property>

	</bean>
	
	<!-- 스프링 모바일 -->
	<mvc:interceptors>
		<!-- Resolve the device which has generated the request -->
		<bean
			class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />

		<!-- User's site preference -->
		<bean
			class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />

		<!-- Redirects users to the device specific site -->
		<!-- <bean
			class="org.springframework.mobile.device.switcher.SiteSwitcherHandlerInterceptor"
			factory-method="urlPath">
			<constructor-arg value="/m" />
			<constructor-arg value="/t" />
			<constructor-arg value="/SpringMobileHelloWorld" />
		</bean> -->
	</mvc:interceptors>
	
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean
				class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
			<bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>


</beans>
