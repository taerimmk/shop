<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="datasource-config.xml"/>

    <!-- <context:component-scan
            base-package="com.june.shop.service"/> -->
            
    <context:component-scan base-package="com.june.shop">
		<context:include-filter type="regex"
			expression="(service)\..*" />
	</context:component-scan>        

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/>

     <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven />
 
	
	<!-- ==================		 3 Profiles to choose from 			=================== 
									- jdbc (uses Spring" JdbcTemplate)
									- jpa
									- spring-data-jpa	
		  =============================================================================-->
	
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	<!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- <property name="typeAliasesPackage" value="com.june.shop.model" /> -->
    </bean>
    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.june.shop.admin.repository, com.june.shop.site.repository" />
        
    </bean>
    
    <!-- Spring Security -->
    <bean id="authService" class="com.june.shop.site.service.impl.AuthServiceImpl" />
	<bean id="authAdminService" class="com.june.shop.admin.service.impl.AuthAdminServiceImpl" />
    <bean id="loginSuccessHandler" class="com.june.shop.site.service.impl.LoginSuccessHandlerImpl">
		<property name="useReferer" value="true"/>
	</bean>
	
	<bean id="loginAdminSuccessHandler" class="com.june.shop.admin.service.impl.LoginAdminSuccessHandlerImpl">
	    <!-- 기존 페이지로 포워딩 -->
		<property name="useReferer" value="true"/>
	</bean>

</beans>