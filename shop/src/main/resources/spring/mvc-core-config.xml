<?xml version="1.0" encoding="UTF-8"?>
<!-- - DispatcherServlet application context for PetClinic's web tier. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<import resource="mvc-view-config.xml" />

	<!-- - POJOs labeled with the @Controller and @Service annotations are auto-detected. -->
	<!-- <context:component-scan base-package="com.june.shop.**.web" /> -->
	<context:component-scan base-package="com.june.shop">
		<context:include-filter type="regex"
			expression="(constroller)\..*" />
	</context:component-scan>

	<mvc:annotation-driven />
	<sec:global-method-security
		secured-annotations="enabled" />
	<!-- all resources inside folder src/main/webapp/resources are mapped so 
		they can be refered to inside JSP files (see header.jsp for more details) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- <mvc:view-controller path="/" view-name="welcome" /> -->

	<!-- serve static resources (*.html, ...) from src/main/webapp/ -->
	<mvc:default-servlet-handler />


	<!-- - Message source for this context, loaded from localized "messages_xx" 
		files. - Files are stored inside src/main/resources -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages/messages" />

	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. -->
	<!-- 익셉션 처리 -->	
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- view name resolved using bean of type InternalResourceViewResolver 
			(declared in mvc-view-config.xml) -->
		<property name="exceptionMappings">

			<props>
				<prop key="org.springframework.security.access.AccessDeniedException">
					cmn/exception/accessDenied
				</prop>
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					cmn/exception/imgUploadErr
				</prop>
				<prop key="org.springframework.dao.EmptyResultDataAccessException">
					cmn/exception/emptyResul
				</prop>

				<!-- <beans:prop key="java.lang.Exception">error/exception_error</beans:prop> -->
			</props>
		</property>
		<property name="defaultErrorView" value="exception" />
		<!-- results into 'WEB-INF/jsp/exception.jsp' -->
		<property name="warnLogCategory" value="warn" />
		<!-- needed otherwise exceptions won't be logged anywhere -->
	</bean>

</beans>